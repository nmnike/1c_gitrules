

//нужные переменные
МетаданныеДокумента  = Объект.Метаданные();
ИскомоеПодразделение = Справочники.Подразделения.ПустаяСсылка();
ИскомыйСклад         = Справочники.Склады.ПустаяСсылка();
ИскомаяОрганизация   = Справочники.Организации.ПустаяСсылка();

/// ШАПКА 

//получим нужные поля по коду магазина
ИмяПараметра = "КодМагазина";
Выполнить(Алгоритмы.ОпределитьПараметрыМагазина);

//общие реквизиты шапки
Выполнить(Алгоритмы.ОбработкаШапки);

//проверим, что контрагент - поставщик
Если ЗначениеЗаполнено(Объект.Контрагент) И Не Объект.Контрагент.Поставщик Тогда
	Контрагент = Объект.Контрагент.ПолучитьОбъект();
	Если Контрагент <> Неопределено Тогда
		Контрагент.Поставщик = Истина;
		Контрагент.Записать();
	КонецЕсли;
КонецЕсли;

//заполним поле договор
ДокументОбъект                  = Объект;
ВалютаРегламентированногоУчета  = Константы.ВалютаРегламентированногоУчета.Получить();
ВидДоговора                     = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
КонтрагентПараметр              = Объект.Контрагент;
ОрганизацияПараметр             = Объект.Организация;
ДоговорВТабличнойЧасти          = Ложь;
ДатаПараметр                    = Объект.Дата;
Выполнить(Алгоритмы.УстановитьДоговорПоКонтрагенту);

//наличие\отсутствиие ордерной схемы
Если ПараметрыОбъекта["ИспользованиеОрдернойСхемы"] Тогда
	
	ПровестиЗаписьНеЗаписанныхОбъектов();
	Объект.ВидПоступления = Перечисления.ВидыПоступленияТоваров.ПоОрдеру;
	
	УИд = ПараметрыОбъекта["СсылкаНаПриходныйОрдерНаТовары"];
	Если НЕ УИд = Неопределено Тогда
		СсылкаНаПриходныйОрдерНаТовары = Документы.ПриходныйОрдерНаТовары.ПолучитьСсылку(Новый УникальныйИдентификатор(УИд));
		
		Если СсылкаНаПриходныйОрдерНаТовары.ПолучитьОбъект() <> Неопределено Тогда
			
			Объект.СкладОрдер = СсылкаНаПриходныйОрдерНаТовары;
			
			////во всех строках расставляем ПО
			//Для Каждого СтрокаТовары Из Объект.Товары Цикл
			//	СтрокаТовары.ПриходныйОрдер = СсылкаНаПриходныйОрдерНаТовары;
			//КонецЦикла;
			
		Иначе
			
			Объект.СкладОрдер = Документы.ПриходныйОрдерНаТовары.ПустаяСсылка();
			
		КонецЕсли;
	КонецЕсли;
	
Иначе
	
	Объект.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад;
	Объект.СкладОрдер     = ИскомыйСклад;
	
КонецЕсли;



/// ТАБЛИЧНАЯ ЧАСТЬ

// Обработаем стандартно табличную часть докумета
ИмяТабличнойЧасти = "Товары";
ДокументОбъект = Объект;
Выполнить(Алгоритмы.ОбработкаТабличнойЧасти);

//заполним склад в табличной части тем же складом, который указан в шапке
Для Каждого СтрокаДокумента Из Объект.Товары Цикл
	СтрокаДокумента.Склад = Объект.СкладОрдер;
КонецЦикла;
