

//нужные переменные
МетаданныеДокумента  = Объект.Метаданные();
ИскомоеПодразделение = Справочники.Подразделения.ПустаяСсылка();
ИскомаяКасса         = Справочники.Кассы.ПустаяСсылка();

/// ШАПКА 

//получим нужные поля по коду магазина
ИмяПараметра = "КодМагазина";
Выполнить(Алгоритмы.ОпределитьПараметрыМагазина);

//общие реквизиты шапки
Выполнить(Алгоритмы.ОбработкаШапки);

//заполним кассу
Если Не ИскомаяКасса.Пустая() Тогда
	Объект.Касса = ИскомаяКасса;
КонецЕсли;

//валюты
ВалютаРегламентированногоУчета  = Константы.ВалютаРегламентированногоУчета.Получить();
Объект.ВалютаДокумента = ВалютаРегламентированногоУчета;
Если Объект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПодотчетником Тогда
	Объект.ВалютаВзаиморасчетаПодотчетника = ВалютаРегламентированногоУчета;
КонецЕсли;

//заполним признак опер. учета и признак оплаты
Объект.ОтраженоВОперУчете = Истина;
Объект.Оплачено           = Истина;

//определим вид договора в табличной части и заодно статью движения денежных средств
ВидДоговора = Неопределено;
СтатьяДвиженияДенежныхСредств = Неопределено;
Если Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ОплатаПоставщику Тогда
	
	ВидДоговора                   = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику;
	
ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю Тогда
	
	ВидДоговора                   = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствПокупателю;
	
ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРКО.ПрочиеРасчетыСКонтрагентами Тогда
	
	ВидДоговора                   = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
	СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПрочиеРасчетыСКонтрагентами;
	
КонецЕсли;

//договор определяем, только если РКО - оплата покупателю или возврат от поставщика
Если ВидДоговора <> Неопределено Тогда
	
	//параметры для вызова алгоритма УстановитьДоговорКонтрагенту
	КонтрагентПараметр     = Объект.Контрагент;
	ОрганизацияПараметр    = Объект.Организация;
	ДатаПараметр           = Объект.Дата;
	ДоговорВТабличнойЧасти = Истина;
	ИмяТабличнойЧасти      = "РасшифровкаПлатежа";
	
	Для Каждого СтрокаРасшифровкиПлатежа Из Объект.РасшифровкаПлатежа Цикл
		
		ДокументОбъект = СтрокаРасшифровкиПлатежа;
		Выполнить(Алгоритмы.УстановитьДоговорПоКонтрагенту);
		
		//расчитаем сумму взаиморасчетов
		Если ЗначениеЗаполнено(СтрокаРасшифровкиПлатежа.ДоговорКонтрагента) Тогда
			
			Если НЕ СтрокаРасшифровкиПлатежа.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
				И СтрокаРасшифровкиПлатежа.ДоговорКонтрагента.ВалютаВзаиморасчетов = Объект.ВалютаДокумента Тогда
				
				СтрокаРасшифровкиПлатежа.СуммаВзаиморасчетов = СтрокаРасшифровкиПлатежа.СуммаПлатежа;
				
			Иначе
			
				СтрокаРасшифровкиПлатежа.СуммаВзаиморасчетов = СтрокаРасшифровкиПлатежа.СуммаПлатежа *  СтрокаРасшифровкиПлатежа.КратностьВзаиморасчетов / СтрокаРасшифровкиПлатежа.КурсВзаиморасчетов;
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		//если надо - уберем ДокументРасчетовСКонтрагентом
		Если ЗначениеЗаполнено(СтрокаРасшифровкиПлатежа.ДоговорКонтрагента) 
		   И НЕ СтрокаРасшифровкиПлатежа.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом Тогда
			
		   СтрокаРасшифровкиПлатежа.ДокументРасчетовСКонтрагентом = Неопределено;
		   
		КонецЕсли;

				
		//установим статью движения денежных средств
		СтрокаРасшифровкиПлатежа.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
		
	КонецЦикла;
	
КонецЕсли;
