Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда
	
	// получим таблицу параметров табличной части
	Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
		
		ПараметрыТаблицы = ПараметрыОбъекта[ИмяТабличнойЧасти + "ТабличнаяЧасть"];
		ПровестиЗаписьНеЗаписанныхОбъектов();
		
	КонецЕсли;
	
	Для Каждого СтрокаТабЧасти Из Объект[ИмяТабличнойЧасти] Цикл
		
		//характеристика номенклатуры
		Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ХарактеристикаНоменклатуры", МетаданныеДокумента, ИмяТабличнойЧасти) И (СтрокаТабЧасти.НомерСтроки <= ПараметрыТаблицы.Количество()) Тогда
			
			// Получим наименование характеристики товара
			НаименованиеХарактеристикиНоменклатуры = ПараметрыТаблицы[СтрокаТабЧасти.НомерСтроки - 1].НаименованиеХарактеристикиНоменклатуры;
			
			// Производим поиск характеристики товара
			Если НЕ(ЗначениеЗаполнено(СтрокаТабЧасти.ХарактеристикаНоменклатуры) ИЛИ ПустаяСтрока(НаименованиеХарактеристикиНоменклатуры)) Тогда
				
				//не назначенные характеристики не переносим и не ищем.
			Если НРег(СокрЛП(НаименованиеХарактеристикиНоменклатуры)) <> "не назначена" Тогда
				СтрокаТабЧасти.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(НаименованиеХарактеристикиНоменклатуры, Истина,, СтрокаТабЧасти.Номенклатура);
				
				// Если не удалось найти - создаем новый элемент
				Если НЕ ЗначениеЗаполнено(СтрокаТабЧасти.ХарактеристикаНоменклатуры) И ЗначениеЗаполнено(СтрокаТабЧасти.Номенклатура) Тогда
					
					ХарактеристикаНоменклатурыОбъект = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
					ХарактеристикаНоменклатурыОбъект.Владелец     = СтрокаТабЧасти.Номенклатура;
					ХарактеристикаНоменклатурыОбъект.Наименование = НаименованиеХарактеристикиНоменклатуры;
					ХарактеристикаНоменклатурыОбъект.ОбменДанными.Загрузка = Истина;
					ХарактеристикаНоменклатурыОбъект.Записать();
					СтрокаТабЧасти.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатурыОбъект.Ссылка;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
			
		КонецЕсли;
		
		//качество
		Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Качество", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			
			СтрокаТабЧасти.Качество = Справочники.Качество.Новый;
			
		КонецЕсли;
	
		//статус партии
		Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СтатусПартии", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
			
			СтрокаТабЧасти.СтатусПартии = Перечисления.СтатусыПартийТоваров.Купленный;
			
		КонецЕсли;
		
		//Условие автоматической скидки
		Если ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("УсловиеАвтоматическойСкидки", МетаданныеДокумента, ИмяТабличнойЧасти) 
			И ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ПроцентАвтоматическихСкидок", МетаданныеДокумента, ИмяТабличнойЧасти) 
			И НЕ СтрокаТабЧасти.ПроцентАвтоматическихСкидок = 0 Тогда
			
			СтрокаТабЧасти.УсловиеАвтоматическойСкидки = Перечисления.УсловияСкидкиНаценки.БезУсловий;
			СтрокаТабЧасти.ЗначениеУсловияАвтоматическойСкидки = 0;
		КонецЕсли;
	КонецЦикла; 
	
КонецЕсли;
